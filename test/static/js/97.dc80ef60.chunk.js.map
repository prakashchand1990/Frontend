{"version":3,"file":"static/js/97.dc80ef60.chunk.js","mappings":"4LACA,EAAmC,uCAAnC,EAAwF,kC,wCCAxF,EAAiC,iC,uHCkajC,EApZiB,SAAHA,GAA0B,IAApBC,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OACtBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5BI,GAAFF,EAAA,GAAcA,EAAA,IAC9BG,GAAkCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8CR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAgCZ,EAAAA,EAAAA,UAAS,IAAGa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAoChB,EAAAA,EAAAA,UAAS,IAAGiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA4CpB,EAAAA,EAAAA,UAAS,IAAGqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAExCG,GAAsCxB,EAAAA,EAAAA,UAAS,IAAGyB,GAAAvB,EAAAA,EAAAA,GAAAsB,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA8C5B,EAAAA,EAAAA,UAAS,IAAG6B,GAAA3B,EAAAA,EAAAA,GAAA0B,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAgDhC,EAAAA,EAAAA,UAAS,IAAGiC,GAAA/B,EAAAA,EAAAA,GAAA8B,EAAA,GAArDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAE5CG,IAAoCpC,EAAAA,EAAAA,UAAS,IAAGqC,IAAAnC,EAAAA,EAAAA,GAAAkC,GAAA,GAAzCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAA4CxC,EAAAA,EAAAA,UAAS,IAAGyC,IAAAvC,EAAAA,EAAAA,GAAAsC,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA4C5C,EAAAA,EAAAA,UAAS,IAAG6C,IAAA3C,EAAAA,EAAAA,GAAA0C,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA8ChD,EAAAA,EAAAA,UAAS,IAAGiD,IAAA/C,EAAAA,EAAAA,GAAA8C,GAAA,GAAnDE,GAAeD,GAAA,GAAEE,GAAkBF,GAAA,IAE1CG,EAAAA,EAAAA,YAAU,WACsB,SAAAC,IAoB3B,OApB2BA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE8BC,EAAAA,EAAMC,IAAI,GAADC,OACxBC,EAAAA,EAAOC,YAAW,0DACvB,KAAD,EAKqD,OAPhDV,EAAOG,EAAAQ,KAGblE,EAAauD,EAAQY,KAAKA,KAAK,GAAGC,KAAKC,WACvCjE,EAAamD,EAAQY,KAAKA,KAAK,GAAGC,KAAKE,WACvC9D,EAAmB+C,EAAQY,KAAKA,KAAK,GAAGC,KAAKG,iBAC7C3D,EAAY2C,EAAQY,KAAKA,KAAK,GAAGC,KAAKI,OACtCxD,EAAcuC,EAAQY,KAAKA,KAAK,GAAGC,KAAKK,OAAOC,OAAOhB,EAAAE,KAAA,GAEtBC,EAAAA,EAAMC,IAAI,GAADC,OAClCC,EAAAA,EAAOC,YAAW,6EACvB,KAAD,GAFKT,EAAiBE,EAAAQ,KAGvB9C,EACIoC,EAAkBW,KAAKA,KAAK,GAAGC,KAAKO,YACtCjB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAEFmB,QAAQC,MAAKpB,EAAAkB,IAAQ,yBAAAlB,EAAAqB,OAAA,GAAAzB,EAAA,oBAE5B0B,MAAA,KAAAC,UAAA,EArBY,WACe/B,EAAA8B,MAAC,KAADC,UAAA,CAsB5BC,EACJ,GAAG,IAEH,IAAAC,IAMIC,EAAAA,EAAAA,MALAC,GAAQF,GAARE,SACAC,GAAYH,GAAZG,aACAC,GAAKJ,GAALI,MACAC,GAAQL,GAARK,SACaC,GAAMN,GAAnBO,UAAaD,OA6BXE,GAAmB,WACrBnE,EAAe,IACfI,EAAmB,IACnBI,EAAoB,IACpBwD,GAAS,eAAgB,GAC7B,EAsBMI,GAAkB,WACpBxD,GAAc,IACdI,GAAkB,IAClBQ,GAAmB,IACnBwC,GAAS,cAAe,GAC5B,EAEA,OACIK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACFtG,KAAMA,EACNC,OAAQA,EACRsG,KAAK,KACLC,UAAQ,EACRC,UAAS,sBAAApC,OAAwBqC,GAAuBL,UAExDF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,0BAAyBJ,UAWpCM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeJ,SAAA,EAC1BF,EAAAA,EAAAA,KAACG,EAAAA,EAAMM,OAAM,CACTC,aAAW,EACXJ,UAAU,sCAAqCJ,UAE/CF,EAAAA,EAAAA,KAACG,EAAAA,EAAMtB,MAAK,CAACyB,UAAU,kCAAiCJ,SACnD5F,OAGTkG,EAAAA,EAAAA,MAACL,EAAAA,EAAMQ,KAAI,CAACL,UAAU,MAAKJ,SAAA,EACtBU,EAAAA,EAAAA,IAAO,GAAD1C,OAAIxD,KAEX8F,EAAAA,EAAAA,MAAA,QACIK,SAAUpB,IA7FrB,SAACnB,EAAMwC,GACpBpB,KACAI,KACAC,KACAjG,IACAkF,QAAQ+B,IAAI,gBAAczC,EAC9B,IAwF4BgC,UAAU,QAAOJ,SAAA,CAEhBpF,EAASkG,KAAI,SAACC,EAAOC,GAClB,OACIV,EAAAA,EAAAA,MAAA,OAEIF,UAAU,kBAAiBJ,SAAA,CAEX,aAAfe,EAAME,MACHnB,EAAAA,EAAAA,KAAA,SAAAoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACId,UAAU,gBACNd,GAASyB,EAAMI,KAAM,CACrBC,SACIL,EAAMM,YACZ,IACFC,YACIP,EAAMQ,gBAIdzB,EAAAA,EAAAA,KAAA,YAAAoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACId,UAAU,gBACNd,GAASyB,EAAMI,KAAM,CACrBC,SACIL,EAAMM,YACZ,IACFC,YACIP,EAAMQ,eAIjB7B,GAAOqB,EAAMI,QACVrB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYJ,SAAC,6BA3B3Be,EAAMS,GAiCvB,IAECpG,EAAe0F,KAAI,SAACW,EAAMT,GACvB,OACIV,EAAAA,EAAAA,MAAA,OAAmBF,UAAU,OAAMJ,SAAA,EAC/BM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCJ,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAOM,UAAU,mBAAkBJ,SAC9ByB,EAAKC,QAGTD,EAAKE,UAAUb,KACZ,SAACc,EAAOZ,GACJ,OACIV,EAAAA,EAAAA,MAAA,OAEIF,UAAS,sDAAApC,OAEL,UADAyD,EAAKR,KAEC,aACA,cACPjB,SAAA,EAEHF,EAAAA,EAAAA,KAAA,SAAAoB,EAAAA,EAAAA,GAAA,CACId,UAAS,YAAApC,OAEL,UADAyD,EAAKR,KAEC,mBACA,oBAEVY,KAAI,GAAA7D,OAEA,UADAyD,EAAKR,KAEC,QACA,YAEVa,KACIL,EAAKC,MAETK,MACIH,EAAMI,KAEVR,GAAE,OAAAxD,OAAS4D,EAAMI,MAAIhE,OAAG4D,EAAMI,OAC1B1C,GACAmC,EAAKC,MACL,CACIN,UAAU,OAItBtB,EAAAA,EAAAA,KAAA,SACIM,UAAU,uDACV6B,QAAO,OAAAjE,OAAS4D,EAAMI,MAAIhE,OAAG4D,EAAMI,MAAOhC,SAEzC4B,EAAMI,SAvCNJ,EAAMJ,GA2CvB,OAGP9B,GAAO+B,EAAKC,SACT5B,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYJ,SAAC,6BAzD1ByB,EAAKD,GA+DvB,KAIAlB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBJ,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOM,UAAU,aAAYJ,SAAC,kBAG9BM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQJ,SAAA,EACnBF,EAAAA,EAAAA,KAACoC,IAAK,CACF9B,UAAU,4CACV+B,SAzMd,SAACC,QACLC,IAAdD,EAAO,IAAoBA,EAAO,GAAGN,OACrCrG,EAAe2G,EAAO,GAAGE,QAAQC,KACjC1G,EAAmBuG,EAAO,GAAGN,MAC7B7F,EAAoB,IACpBwD,GAAS,eAAgB2C,GAEjC,EAmMwCI,QAjMf,SAACzD,EAAO0D,GAC7BhH,EAAe,IACfI,EAAmB,IACnBI,EAAoB8C,EAAM2D,QAG9B,EA4LwCC,QAAS,CACL,YACA,YACA,cAIJC,UAAQ,EACRC,YAAa,IACbC,YAAa,EACbC,WAAS,EAAA/C,SAERpE,EAAgBoH,OAAS,EACpBpH,EACA,wCAEV0E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BJ,SAAA,CAAC,wBACjB,KACtBF,EAAAA,EAAAA,KAAA,QAAMM,UAAU,aAAYJ,SAAC,yBAKhCxE,EAAYwH,OAAS,IAClB1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2CAA0CJ,SAAA,EACrDF,EAAAA,EAAAA,KAAA,OACIM,UAAU,YACVC,MAAO,CACH4C,SAAU,QACVC,UAAW,QAEfC,IAAK3H,EACL4H,IAAI,MAERtD,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CACDjD,UAAU,qDACVC,MAAO,CACHiD,UAAW,QAEfC,QAAS3D,GAAiBI,UAE1BF,EAAAA,EAAAA,KAAC0D,EAAAA,GAAK,CACFC,OAAO,eACP3B,KAAK,aAKpB9F,IACG8D,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYJ,SACtBhE,WAQjBsE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBJ,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAOM,UAAU,aAAYJ,SAAC,iBAG9BM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,QAAOJ,SAAA,EAClBF,EAAAA,EAAAA,KAACoC,IAAK,CACF9B,UAAU,6CACV+B,SAjPf,SAACuB,QACLrB,IAAbqB,EAAM,IAAoBA,EAAM,GAAG5B,OACnCrC,GAAS,cAAeiE,GACxBrH,GAAcqH,EAAM,GAAGpB,QAAQT,MAC/BpF,GAAkBiH,EAAM,GAAG5B,MAC3BjF,GAAkB6G,EAAM,GAAGC,WAE3B1G,GAAmB,IAE3B,EAyOwCuF,QAvOhB,SAACzD,EAAO0D,GAC5BpG,GAAc,IACdI,GAAkB,IAClBQ,GAAmB8B,EAAM2D,QAC7B,EAoOwCC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,UAAQ,EACRC,YAAa,IACbC,YAAa,EACbC,WAAS,EAAA/C,SAERxD,GAAewG,OAAS,EACnBxG,GACA,wCAEV8D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BJ,SAAA,CAAC,wBACjB,KACtBF,EAAAA,EAAAA,KAAA,QAAMM,UAAU,aAAYJ,SAAC,wBAKhC5D,GAAW4G,OAAS,IACjB1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CJ,SAAA,EACtDF,EAAAA,EAAAA,KAAA,OACIM,UAAU,YACVC,MAAO,CACH4C,SAAU,QACVC,UAAW,QAEfC,IACuB,QAAnBvG,G,yrVAGM,QADAA,G,67DAGAgH,EAEVR,IAAI,MAERtD,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CACDjD,UAAU,qDACVC,MAAO,CACHiD,UAAW,QAEfC,QAAS1D,GAAgBG,UAEzBF,EAAAA,EAAAA,KAAC0D,EAAAA,GAAK,CACFC,OAAO,eACP3B,KAAK,aAKpB9E,KACG8C,EAAAA,EAAAA,KAAA,OAAKM,UAAU,aAAYJ,SACtBhD,YAMjB8C,EAAAA,EAAAA,KAAA,OAAKM,UAAU,kBAAiBJ,UAC5BF,EAAAA,EAAAA,KAAA,UACIM,UAAU,iCACVyB,KAAK,SAAQ7B,SAEZhF,oBAUzC,E,UCxYA,G,QArB2B,WACvB,OACI8E,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIM,EAAAA,EAAAA,MAAA,OACIF,UAAS,uDAAyDJ,SAAA,EAElEF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,yCAAwCJ,UACnDF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAQ,CAACC,MAAO,GAAIC,OAAQ,QAGjCjE,EAAAA,EAAAA,KAAA,MAAIM,UAAU,2BAA0BJ,UACpCF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAQ,OAEb/D,EAAAA,EAAAA,KAAA,OAAKM,UAAU,6BAA4BJ,UACvCF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAQ,CAACG,MAAO,UAKrC,GC8HA,EA1IqB,WACjB,IAAAnK,GAA4DC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjEoK,EAAsBlK,EAAA,GAAEmK,EAAyBnK,EAAA,GACxDG,GAA4DJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjEiK,EAAsBhK,EAAA,GAAEiK,EAAyBjK,EAAA,GACxDG,GAAwDR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA7D+J,EAAoB9J,EAAA,GAAE+J,EAAuB/J,EAAA,GAEpDG,GAAwBZ,EAAAA,EAAAA,WAAS,GAAMa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAhCf,EAAIgB,EAAA,GAAE4J,EAAO5J,EAAA,GAGd6J,EAAa,WAAH,OAASD,GAAQ,EAAM,EA4BvC,OA1BArH,EAAAA,EAAAA,YAAU,WAC4B,SAAAuH,IAoBjC,OApBiCA,GAAArH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAlC,SAAAC,IAAA,IAAAmH,EAAA,OAAArH,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEqCC,EAAAA,EAAMC,IAAI,GAADC,OAC/BC,EAAAA,EAAOC,YAAW,qDACvB,KAAD,EAFKwG,EAAc/G,EAAAQ,KAIpBwG,YAAW,WACPT,EACIQ,EAAetG,KAAKA,KAAKwG,aAAarE,QAE1C6D,EACIM,EAAetG,KAAKA,KAAKwG,aAAalG,QAE1C4F,EACII,EAAetG,KAAKA,KAAKwG,aAAaC,aAE9C,GAAG,KAAKlH,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAERmB,QAAQC,MAAKpB,EAAAkB,IAAQ,yBAAAlB,EAAAqB,OAAA,GAAAzB,EAAA,mBAE5B0B,MAAA,KAAAC,UAAA,EArBY,WACqBuF,EAAAxF,MAAC,KAADC,UAAA,CAsBlC4F,EACJ,GAAG,KAGCxE,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,WAASM,UAAU,OAAMJ,UACrBM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWJ,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,MAAKJ,UAChBM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4DAA2DJ,SAAA,EACtEF,EAAAA,EAAAA,KAAA,MAAIM,UAAU,2BAA0BJ,SACnCiE,EAAuBtF,MACpBsF,EAAuBtF,OAEvBmB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,mBAAkBJ,UAC7BF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAQ,SAIrB/D,EAAAA,EAAAA,KAAA,OAAKM,UAAU,cAAaJ,SACvBiE,EAAuBc,aACpBC,EAAAA,EAAAA,IAAM,GAADhH,OACEiG,EAAuBc,eAG9BjF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,6BAA4BJ,UACvCF,EAAAA,EAAAA,KAAC+D,EAAAA,EAAQ,CAACG,MAAO,cAMrClE,EAAAA,EAAAA,KAAA,OAAKM,UAAS,YAAApC,OAAcqC,GAAyBL,SAChDqE,GACDA,EAAqBrB,OAAS,EAC1BqB,EAAqBvD,KAAI,SAACmE,EAASjE,GAC/B,IAAMkE,GAAWC,EAAAA,EAAAA,IACbF,EAAQG,cAEZ,OACI9E,EAAAA,EAAAA,MAAA,OAEIF,UAAS,uDAAApC,OAAyDqC,GAAoBL,SAAA,EAEtFF,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CAEDjD,UAAU,yCACVmD,QAASiB,EAAWxE,UAEpBF,EAAAA,EAAAA,KAAC0D,EAAAA,GAAK,CACFpD,UAAU,mBACVqD,OAAQyB,EACRpD,KAAMmD,EAAQG,gBAPbH,EAAQzD,KAWjB1B,EAAAA,EAAAA,KAAA,MAAIM,UAAU,UAASJ,UACnBF,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CACDjD,UAAU,kBACVmD,QAASiB,EAAWxE,SAEnBiF,EAAQtG,WAGjBmB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,6BAA4BJ,UACtCgF,EAAAA,EAAAA,IAAM,GAADhH,OAAIiH,EAAQF,kBAxBjBE,EAAQzD,GA4BzB,KAEAlB,EAAAA,EAAAA,MAAAP,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,KACpBvF,EAAAA,EAAAA,KAACuF,EAAmB,UAIhCvF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,MAAKJ,UAChBF,EAAAA,EAAAA,KAAA,OAAKM,UAAU,wBAAuBJ,SACjCmE,EAAuBxF,OACpBmB,EAAAA,EAAAA,KAACuD,EAAAA,GAAI,CACDjD,UAAU,oBACVkF,GAAInB,EAAuBoB,IAC3BhC,QAASiB,EAAWxE,SAEnBmE,EAAuBxF,SAG5BmB,EAAAA,EAAAA,KAAC+D,EAAAA,EAAQ,CAACzD,UAAU,8DAOxCN,EAAAA,EAAAA,KAAC0F,EAAQ,CAAC7L,KAAMA,EAAMC,OA9HV,WAAH,OAAS2K,GAAQ,EAAO,MAiI7C,C","sources":["webpack://client/./src/components/Home/HomeServices.module.css?344e","webpack://client/./src/components/Utilities/Modal/LetsTalk.module.css?a4f1","components/Utilities/Modal/LetsTalk.jsx","components/Utilities/SkeletonItem/ServiceItemSkeleton.jsx","components/Home/HomeServices.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"services_wrapper\":\"HomeServices_services_wrapper__tx+Ca\",\"service_box\":\"HomeServices_service_box__yxfjJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"letstalk_modal\":\"LetsTalk_letstalk_modal__n9K89\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport style from \"./LetsTalk.module.css\";\r\nimport { Modal } from \"react-bootstrap\";\r\n// import ProfileImg from \"./../../../assets/images/princepal-img2.jpg\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config\";\r\nimport parser from \"html-react-parser\";\r\nimport Files from \"react-files\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Icons from \"../Icons/Icons\";\r\nimport iconPDF from \"./../../../assets/images/pdf.png\";\r\nimport iconPPT from \"./../../../assets/images/ppt.png\";\r\nimport iconDOC from \"./../../../assets/images/doc.png\";\r\n\r\nconst LetsTalk = ({ show, onHide }) => {\r\n    const [formImage, setFormImage] = useState([]);\r\n    const [formTitle, setFormTitle] = useState([]);\r\n    const [formDescription, setFormDescription] = useState([]);\r\n    const [formData, setFormData] = useState([]);\r\n    const [formButton, setFormButton] = useState([]);\r\n    const [formMultiItems, setFormMultiItems] = useState([]);\r\n\r\n    const [uploadImage, setUploadImage] = useState([]);\r\n    const [uploadImageName, setUploadImageName] = useState([]);\r\n    const [uploadImageError, setUploadImageError] = useState(\"\");\r\n\r\n    const [uploadFile, setUploadFile] = useState([]);\r\n    const [uploadFileName, setUploadFileName] = useState(\"\");\r\n    const [uploadFileIcon, setUploadFileIcon] = useState(\"\");\r\n    const [uploadFileError, setUploadFileError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function getFooterData() {\r\n            try {\r\n                const formAPI = await axios.get(\r\n                    `${config.BACKEND_URL}/api/contact-forms?populate[Form][populate]populate=*`\r\n                );\r\n                setFormImage(formAPI.data.data[0].Form.FormImage);\r\n                setFormTitle(formAPI.data.data[0].Form.FormTitle);\r\n                setFormDescription(formAPI.data.data[0].Form.FormDescription);\r\n                setFormData(formAPI.data.data[0].Form.Field);\r\n                setFormButton(formAPI.data.data[0].Form.Button.Title);\r\n\r\n                const formMultiItemsAPI = await axios.get(\r\n                    `${config.BACKEND_URL}/api/contact-forms?populate[Form][populate]populate=MultiItems.MultiItem`\r\n                );\r\n                setFormMultiItems(\r\n                    formMultiItemsAPI.data.data[0].Form.MultiItems\r\n                );\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        getFooterData();\r\n    }, []);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        setValue,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = (data, e) => {\r\n        reset();\r\n        handleClearImage();\r\n        handleClearFile();\r\n        onHide();\r\n        console.log(\"data ---> \", data);\r\n    };\r\n\r\n    // image upload\r\n    const handleImageChange = (images) => {\r\n        if (images[0] !== undefined && images[0].name) {\r\n            setUploadImage(images[0].preview.url);\r\n            setUploadImageName(images[0].name);\r\n            setUploadImageError(\"\");\r\n            setValue(\"upload_image\", images);\r\n        }\r\n    };\r\n\r\n    const handleImageError = (error, file) => {\r\n        setUploadImage([]);\r\n        setUploadImageName(\"\");\r\n        setUploadImageError(error.message);\r\n        // console.log(\"error code \" + error.code + \": \" + error.message);\r\n        // console.log(\"error code \" + error.code + \": \" + error.message);\r\n    };\r\n\r\n    const handleClearImage = () => {\r\n        setUploadImage([]);\r\n        setUploadImageName(\"\");\r\n        setUploadImageError(\"\");\r\n        setValue(\"upload_image\", \"\");\r\n    };\r\n\r\n    // =====================================\r\n\r\n    // file upload\r\n    const handleFileChange = (files) => {\r\n        if (files[0] !== undefined && files[0].name) {\r\n            setValue(\"upload_file\", files);\r\n            setUploadFile(files[0].preview.type);\r\n            setUploadFileName(files[0].name);\r\n            setUploadFileIcon(files[0].extension);\r\n            // setUploadPdfFile(files[0]);\r\n            setUploadFileError(\"\");\r\n        }\r\n    };\r\n\r\n    const handleFileError = (error, file) => {\r\n        setUploadFile([]);\r\n        setUploadFileName(\"\");\r\n        setUploadFileError(error.message);\r\n    };\r\n\r\n    const handleClearFile = () => {\r\n        setUploadFile([]);\r\n        setUploadFileName(\"\");\r\n        setUploadFileError(\"\");\r\n        setValue(\"upload_file\", \"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={show}\r\n                onHide={onHide}\r\n                size=\"md\"\r\n                centered\r\n                className={`overflow-hidden111 ${style.letstalk_modal}`}\r\n            >\r\n                <div className=\"row111 d-flex flex-wrap\">\r\n                    {/* <div className=\"col-sm-5\">\r\n                        <img\r\n                            src={`${config.BACKEND_URL}${formImage.url}`}\r\n                            alt={formImage.alternativeText}\r\n                            title={formImage.caption}\r\n                            loading=\"lazy\"\r\n                            className=\"w-100 h-100 object-fit-cover\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-sm-7 p-4\"> */}\r\n                    <div className=\"col-sm-12 p-4\">\r\n                        <Modal.Header\r\n                            closeButton\r\n                            className=\"align-items-start p-0 mb-2 border-0\"\r\n                        >\r\n                            <Modal.Title className=\"fs-3 fw-bold lh-body mb-0 w-100\">\r\n                                {formTitle}\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body className=\"p-0\">\r\n                            {parser(`${formDescription}`)}\r\n\r\n                            <form\r\n                                onSubmit={handleSubmit(onSubmit)}\r\n                                className=\"-mb-3\"\r\n                            >\r\n                                {formData.map((field, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={field.id}\r\n                                            className=\"form-group mb-3\"\r\n                                        >\r\n                                            {field.Type !== \"textarea\" ? (\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    {...register(field.Name, {\r\n                                                        required:\r\n                                                            field.Required,\r\n                                                    })}\r\n                                                    placeholder={\r\n                                                        field.Placeholder\r\n                                                    }\r\n                                                />\r\n                                            ) : (\r\n                                                <textarea\r\n                                                    className=\"form-control\"\r\n                                                    {...register(field.Name, {\r\n                                                        required:\r\n                                                            field.Required,\r\n                                                    })}\r\n                                                    placeholder={\r\n                                                        field.Placeholder\r\n                                                    }\r\n                                                ></textarea>\r\n                                            )}\r\n                                            {errors[field.Name] && (\r\n                                                <div className=\"form-error\">\r\n                                                    This field is required\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n\r\n                                {formMultiItems.map((item, index) => {\r\n                                    return (\r\n                                        <div key={item.id} className=\"mb-3\">\r\n                                            <div className=\"form-group d-flex flex-wrap -mb-3\">\r\n                                                <label className=\"form-label w-100\">\r\n                                                    {item.Label}\r\n                                                </label>\r\n\r\n                                                {item.MultiItem.map(\r\n                                                    (label, index) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                key={label.id}\r\n                                                                className={`d-flex flex-wrap align-items-center ps-0 me-3 mb-3 ${\r\n                                                                    item.Type ===\r\n                                                                    \"Radio\"\r\n                                                                        ? \"form-radio\"\r\n                                                                        : \"form-check\"\r\n                                                                }`}\r\n                                                            >\r\n                                                                <input\r\n                                                                    className={`m-0 me-2 ${\r\n                                                                        item.Type ===\r\n                                                                        \"Radio\"\r\n                                                                            ? \"form-radio-input\"\r\n                                                                            : \"form-check-input\"\r\n                                                                    }`}\r\n                                                                    type={`${\r\n                                                                        item.Type ===\r\n                                                                        \"Radio\"\r\n                                                                            ? \"radio\"\r\n                                                                            : \"checkbox\"\r\n                                                                    }`}\r\n                                                                    name={\r\n                                                                        item.Label\r\n                                                                    }\r\n                                                                    value={\r\n                                                                        label.Item\r\n                                                                    }\r\n                                                                    id={`flex${label.Item}${label.Item}`}\r\n                                                                    {...register(\r\n                                                                        item.Label,\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                        }\r\n                                                                    )}\r\n                                                                />\r\n                                                                <label\r\n                                                                    className=\"form-radio-label form-control111 text-muted fs-small\"\r\n                                                                    htmlFor={`flex${label.Item}${label.Item}`}\r\n                                                                >\r\n                                                                    {label.Item}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                            </div>\r\n                                            {errors[item.Label] && (\r\n                                                <div className=\"form-error\">\r\n                                                    This field is required\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n\r\n                                {/* upload image */}\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label className=\"form-label\">\r\n                                        Upload Image\r\n                                    </label>\r\n                                    <div className=\"images\">\r\n                                        <Files\r\n                                            className=\"files-dropzone form-control text-truncate\"\r\n                                            onChange={handleImageChange}\r\n                                            onError={handleImageError}\r\n                                            accepts={[\r\n                                                \"image/png\",\r\n                                                \"image/jpg\",\r\n                                                \"image/jpeg\",\r\n                                                // \".pdf\",\r\n                                                // \"audio/*\",\r\n                                            ]}\r\n                                            multiple\r\n                                            maxFileSize={1000000}\r\n                                            minFileSize={0}\r\n                                            clickable\r\n                                        >\r\n                                            {uploadImageName.length > 0\r\n                                                ? uploadImageName\r\n                                                : \"Drop files here or click to upload\"}\r\n                                        </Files>\r\n                                        <div className=\"fs-xsmall text-muted mt-1\">\r\n                                            Supported file types:{\" \"}\r\n                                            <span className=\"fst-italic\">\r\n                                                .png, .jpg, .jpeg\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {uploadImage.length > 0 && (\r\n                                            <div className=\"img-thumb d-table mt-3 position-relative\">\r\n                                                <img\r\n                                                    className=\"rounded-1\"\r\n                                                    style={{\r\n                                                        maxWidth: \"100px\",\r\n                                                        maxHeight: \"80px\",\r\n                                                    }}\r\n                                                    src={uploadImage}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                                <Link\r\n                                                    className=\"d-flex flex-wrap position-absolute top-0 start-100\"\r\n                                                    style={{\r\n                                                        marginTop: \"-4px\",\r\n                                                    }}\r\n                                                    onClick={handleClearImage}\r\n                                                >\r\n                                                    <Icons\r\n                                                        family=\"BsReactIcons\"\r\n                                                        name=\"BsX\"\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                        )}\r\n                                        {uploadImageError && (\r\n                                            <div className=\"form-error\">\r\n                                                {uploadImageError}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* upload file */}\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label className=\"form-label\">\r\n                                        Upload File\r\n                                    </label>\r\n                                    <div className=\"files\">\r\n                                        <Files\r\n                                            className=\"files-dropzone2 form-control text-truncate\"\r\n                                            onChange={handleFileChange}\r\n                                            onError={handleFileError}\r\n                                            accepts={[\".pdf\", \".ppt\", \".doc\"]}\r\n                                            multiple\r\n                                            maxFileSize={1000000}\r\n                                            minFileSize={0}\r\n                                            clickable\r\n                                        >\r\n                                            {uploadFileName.length > 0\r\n                                                ? uploadFileName\r\n                                                : \"Drop files here or click to upload\"}\r\n                                        </Files>\r\n                                        <div className=\"fs-xsmall text-muted mt-1\">\r\n                                            Supported file types:{\" \"}\r\n                                            <span className=\"fst-italic\">\r\n                                                .pdf, .ppt, .doc\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        {uploadFile.length > 0 && (\r\n                                            <div className=\"file-thumb d-table mt-3 position-relative\">\r\n                                                <img\r\n                                                    className=\"rounded-1\"\r\n                                                    style={{\r\n                                                        maxWidth: \"100px\",\r\n                                                        maxHeight: \"50px\",\r\n                                                    }}\r\n                                                    src={\r\n                                                        uploadFileIcon === \"pdf\"\r\n                                                            ? iconPDF\r\n                                                            : uploadFileIcon ===\r\n                                                              \"ppt\"\r\n                                                            ? iconPPT\r\n                                                            : iconDOC\r\n                                                    }\r\n                                                    alt=\"\"\r\n                                                />\r\n                                                <Link\r\n                                                    className=\"d-flex flex-wrap position-absolute top-0 start-100\"\r\n                                                    style={{\r\n                                                        marginTop: \"-4px\",\r\n                                                    }}\r\n                                                    onClick={handleClearFile}\r\n                                                >\r\n                                                    <Icons\r\n                                                        family=\"BsReactIcons\"\r\n                                                        name=\"BsX\"\r\n                                                    />\r\n                                                </Link>\r\n                                            </div>\r\n                                        )}\r\n                                        {uploadFileError && (\r\n                                            <div className=\"form-error\">\r\n                                                {uploadFileError}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-3\">\r\n                                    <button\r\n                                        className=\"btn btn-secondary btn-sm w-100\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        {formButton}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LetsTalk;\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst ServiceItemSkelton = () => {\r\n    return (\r\n        <>\r\n            <div\r\n                className={`col-sm-6 col-md-4 col-lg-3 text-center mb-4 mb-sm-5 `}\r\n            >\r\n                <div className=\"display-5 d-table mx-auto mb-3 mb-md-4\">\r\n                    <Skeleton width={48} height={48} />\r\n                </div>\r\n\r\n                <h4 className=\"fw-bold col-sm-6 mx-auto\">\r\n                    <Skeleton />\r\n                </h4>\r\n                <div className=\"description-link-underline\">\r\n                    <Skeleton count={3} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ServiceItemSkelton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./HomeServices.module.css\";\r\nimport Icons, { iconMapFunction } from \"../Utilities/Icons/Icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LetsTalk from \"../Utilities/Modal/LetsTalk\";\r\nimport config from \"../../config\";\r\nimport axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport ServiceItemSkeleton from \"../Utilities/SkeletonItem/ServiceItemSkeleton\";\r\n\r\nconst HomeServices = () => {\r\n    const [homeServicesHeaderData, setHomeServicesHeaderData] = useState([]);\r\n    const [homeServicesButtonData, setHomeServicesButtonData] = useState([]);\r\n    const [homeServicesListData, setHomeServicesListData] = useState([]);\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(() => {\r\n        async function getHomeServicesData() {\r\n            try {\r\n                const homeServiceAPI = await axios.get(\r\n                    `${config.BACKEND_URL}/api/home-new?populate[ServiceItems][populate]=*`\r\n                );\r\n\r\n                setTimeout(() => {\r\n                    setHomeServicesHeaderData(\r\n                        homeServiceAPI.data.data.ServiceItems.Header\r\n                    );\r\n                    setHomeServicesButtonData(\r\n                        homeServiceAPI.data.data.ServiceItems.Button\r\n                    );\r\n                    setHomeServicesListData(\r\n                        homeServiceAPI.data.data.ServiceItems.ServicesList\r\n                    );\r\n                }, 625);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        getHomeServicesData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"py-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-lg-10 offset-lg-1 col-xl-8 offset-xl-2 mb-4\">\r\n                            <h2 className=\"text-center fw-bold mb-4\">\r\n                                {homeServicesHeaderData.Title ? (\r\n                                    homeServicesHeaderData.Title\r\n                                ) : (\r\n                                    <div className=\"col-sm-4 mx-auto\">\r\n                                        <Skeleton />\r\n                                    </div>\r\n                                )}\r\n                            </h2>\r\n                            <div className=\"text-center\">\r\n                                {homeServicesHeaderData.Description ? (\r\n                                    parse(\r\n                                        `${homeServicesHeaderData.Description}`\r\n                                    )\r\n                                ) : (\r\n                                    <div className=\"col-sm-8 col-lg-10 mx-auto\">\r\n                                        <Skeleton count={2} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`row mt-4 ${style.services_wrapper}`}>\r\n                        {homeServicesListData &&\r\n                        homeServicesListData.length > 0 ? (\r\n                            homeServicesListData.map((service, index) => {\r\n                                const iconData = iconMapFunction(\r\n                                    service.serviceIcons\r\n                                );\r\n                                return (\r\n                                    <div\r\n                                        key={service.id}\r\n                                        className={`col-sm-6 col-md-4 col-lg-3 text-center mb-4 mb-sm-5 ${style.service_box}`}\r\n                                    >\r\n                                        <Link\r\n                                            key={service.id}\r\n                                            className=\"display-5 d-table mx-auto mb-3 mb-md-4\"\r\n                                            onClick={handleShow}\r\n                                        >\r\n                                            <Icons\r\n                                                className=\"display-444 mb-0\"\r\n                                                family={iconData}\r\n                                                name={service.serviceIcons}\r\n                                            />\r\n                                        </Link>\r\n\r\n                                        <h4 className=\"fw-bold\">\r\n                                            <Link\r\n                                                className=\"d-table mx-auto\"\r\n                                                onClick={handleShow}\r\n                                            >\r\n                                                {service.Title}\r\n                                            </Link>\r\n                                        </h4>\r\n                                        <div className=\"description-link-underline\">\r\n                                            {parse(`${service.Description}`)}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <>\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                                <ServiceItemSkeleton />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 text-center\">\r\n                            {homeServicesButtonData.Title ? (\r\n                                <Link\r\n                                    className=\"btn btn-secondary\"\r\n                                    to={homeServicesButtonData.URL}\r\n                                    onClick={handleShow}\r\n                                >\r\n                                    {homeServicesButtonData.Title}\r\n                                </Link>\r\n                            ) : (\r\n                                <Skeleton className=\"btn btn-secondary btn-skeleton btn-min-w w-auto\" />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <LetsTalk show={show} onHide={handleClose} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeServices;\r\n"],"names":["_ref","show","onHide","_useState","useState","_useState2","_slicedToArray","setFormImage","_useState3","_useState4","formTitle","setFormTitle","_useState5","_useState6","formDescription","setFormDescription","_useState7","_useState8","formData","setFormData","_useState9","_useState10","formButton","setFormButton","_useState11","_useState12","formMultiItems","setFormMultiItems","_useState13","_useState14","uploadImage","setUploadImage","_useState15","_useState16","uploadImageName","setUploadImageName","_useState17","_useState18","uploadImageError","setUploadImageError","_useState19","_useState20","uploadFile","setUploadFile","_useState21","_useState22","uploadFileName","setUploadFileName","_useState23","_useState24","uploadFileIcon","setUploadFileIcon","_useState25","_useState26","uploadFileError","setUploadFileError","useEffect","_getFooterData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formAPI","formMultiItemsAPI","wrap","_context","prev","next","axios","get","concat","config","BACKEND_URL","sent","data","Form","FormImage","FormTitle","FormDescription","Field","Button","Title","MultiItems","t0","console","error","stop","apply","arguments","getFooterData","_useForm","useForm","register","handleSubmit","reset","setValue","errors","formState","handleClearImage","handleClearFile","_jsx","_Fragment","children","Modal","size","centered","className","style","_jsxs","Header","closeButton","Body","parser","onSubmit","e","log","map","field","index","Type","_objectSpread","Name","required","Required","placeholder","Placeholder","id","item","Label","MultiItem","label","type","name","value","Item","htmlFor","Files","onChange","images","undefined","preview","url","onError","file","message","accepts","multiple","maxFileSize","minFileSize","clickable","length","maxWidth","maxHeight","src","alt","Link","marginTop","onClick","Icons","family","files","extension","iconDOC","Skeleton","width","height","count","homeServicesHeaderData","setHomeServicesHeaderData","homeServicesButtonData","setHomeServicesButtonData","homeServicesListData","setHomeServicesListData","setShow","handleShow","_getHomeServicesData","homeServiceAPI","setTimeout","ServiceItems","ServicesList","getHomeServicesData","Description","parse","service","iconData","iconMapFunction","serviceIcons","ServiceItemSkeleton","to","URL","LetsTalk"],"sourceRoot":""}