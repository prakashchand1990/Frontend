{"version":3,"file":"static/js/879.dce283d8.chunk.js","mappings":"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","sources":["components/Home/SaasProjects.module.css","components/Utilities/SkeletonItem/SaasItemSkeleton.jsx","components/Home/SaasProjects.jsx","../node_modules/react-loading-skeleton/dist/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"projects_wrapper\":\"SaasProjects_projects_wrapper__bhYGo\",\"project_box\":\"SaasProjects_project_box__gtodz\"};","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport \"react-loading-skeleton/dist/skeleton.css\";\r\n\r\nconst SaasItemSkeleton = () => {\r\n    return (\r\n        <>\r\n            <div className={`col-sm-6 mt-4`}>\r\n                <div className=\"bg-white text-center text-hover-underline d-block h-100 rounded-3 shadow-sm overflow-hidden\">\r\n                    <figure className=\"m-0 ratio ratio-4x3\">\r\n                        <Skeleton className=\"w-100 h-100 object-fit-cover\" />\r\n                    </figure>\r\n                    <h4 className=\"font-body p-3 mb-0\">\r\n                        <Skeleton />\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaasItemSkeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./SaasProjects.module.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\nimport parser from \"html-react-parser\";\r\nimport { postURL } from \"./../Utilities/PostURL/PostUrl\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport SaasItemSkeleton from \"../Utilities/SkeletonItem/SaasItemSkeleton\";\r\n// import ImgPlaceholder from \"./../../assets/images/placeholder-medium.png\";\r\n\r\nconst SaasProjects = () => {\r\n    const [saasHeaderData, setSaasHeaderData] = useState([]);\r\n    const [saasButtonData, setSaasButtonData] = useState([]);\r\n    const [saasProjectsData, setSaasProjectsData] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        async function getSaasHeaderData() {\r\n            try {\r\n                const saasHeaderAPI = await axios.get(\r\n                    `${config.BACKEND_URL}/api/home-new?populate[SaasProject][populate]=*&populate[Button][populate]=*`\r\n                );\r\n                // setSaasHeaderData(saasHeaderAPI.data.data.SaasProject.Header);\r\n                // setSaasButtonData(saasHeaderAPI.data.data.SaasProject.Button);\r\n                setTimeout(() => {\r\n                    setSaasHeaderData(\r\n                        saasHeaderAPI.data.data.SaasProject.Header\r\n                    );\r\n                    setSaasButtonData(\r\n                        saasHeaderAPI.data.data.SaasProject.Button\r\n                    );\r\n                }, 625);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        getSaasHeaderData();\r\n\r\n        async function getSaasProjectsData() {\r\n            try {\r\n                const saasProjectsAPI = await axios.get(\r\n                    `${config.BACKEND_URL}/api/saas-projects?populate=*`\r\n                );\r\n                // setSaasProjectsData(saasProjectsAPI.data.data);\r\n                setTimeout(() => {\r\n                    setSaasProjectsData(saasProjectsAPI.data.data);\r\n                }, 625);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        getSaasProjectsData();\r\n    }, []);\r\n\r\n    const postURLFunction = async (posturl, type) => {\r\n        const apiResponse = await postURL(posturl, type);\r\n        navigate(`/projects/${apiResponse.data.data[0].PostURL}`, {\r\n            state: apiResponse.data.data[0].Description,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <section className=\"py-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 col-lg-10 offset-lg-1 col-xl-8 offset-xl-2 mb-4\">\r\n                            <h2 className=\"text-center fw-bold mb-4\">\r\n                                {saasHeaderData.Title ? (\r\n                                    saasHeaderData.Title\r\n                                ) : (\r\n                                    <div className=\"col-sm-4 mx-auto\">\r\n                                        <Skeleton />\r\n                                    </div>\r\n                                )}\r\n                            </h2>\r\n                            <div className=\"text-center\">\r\n                                {saasHeaderData.Description ? (\r\n                                    parser(`${saasHeaderData.Description}`)\r\n                                ) : (\r\n                                    <div className=\"col-sm-8 col-lg-10 mx-auto\">\r\n                                        <Skeleton count={3} />\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`row ${style.projects_wrapper}`}>\r\n                        {saasProjectsData && saasProjectsData.length > 0 ? (\r\n                            saasProjectsData\r\n                                .slice(0, 4)\r\n                                .map((project, index) => {\r\n                                    return (\r\n                                        <div\r\n                                            key={project.id}\r\n                                            className={`col-sm-6 mt-4 ${style.project_box}`}\r\n                                        >\r\n                                            <Link\r\n                                                className=\"bg-white text-center text-hover-underline d-block h-100 rounded-3 shadow-sm overflow-hidden\"\r\n                                                onClick={\r\n                                                    (e) =>\r\n                                                        postURLFunction(\r\n                                                            project.PostURL,\r\n                                                            \"saas-projects\"\r\n                                                        ) // slug, type\r\n                                                }\r\n                                            >\r\n                                                {/* <figure className=\"m-0 ratio ratio-4x3\">\r\n                                                    <img\r\n                                                        src={`\r\n                                                    ${config.BACKEND_URL}${project.ProjectThumbnail.formats.medium.url}\r\n                                                `}\r\n                                                        alt={\r\n                                                            project\r\n                                                                .ProjectThumbnail\r\n                                                                .alternativeText\r\n                                                        }\r\n                                                        loading=\"lazy\"\r\n                                                        className=\"w-100 h-100 object-fit-cover\"\r\n                                                    />\r\n                                                </figure> */}\r\n\r\n                                                {project.ProjectThumbnailVideo &&\r\n                                                project.ProjectThumbnailVideo\r\n                                                    .url.length > 0 ? (\r\n                                                    <div className=\"m-0 ratio ratio-4x3 ratio-16x999 overflow-hidden\">\r\n                                                        <video\r\n                                                            width=\"320\"\r\n                                                            height=\"240\"\r\n                                                            autoPlay\r\n                                                            className=\"bg-gray\"\r\n                                                            style={{\r\n                                                                transform:\r\n                                                                    \"scale(1.4)\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <source\r\n                                                                src={`${config.BACKEND_URL}${project.ProjectThumbnailVideo.url}`}\r\n                                                                type=\"video/mp4\"\r\n                                                            />\r\n                                                            Your browser does\r\n                                                            not support the\r\n                                                            video tag.\r\n                                                        </video>\r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <figure className=\"m-0 ratio ratio-4x3\">\r\n                                                        <img\r\n                                                            src={`\r\n                                                    ${config.BACKEND_URL}${project.ProjectThumbnail.formats.medium.url}\r\n                                                `}\r\n                                                            alt={\r\n                                                                project\r\n                                                                    .ProjectThumbnail\r\n                                                                    .alternativeText\r\n                                                            }\r\n                                                            loading=\"lazy\"\r\n                                                            className=\"w-100 h-100 object-fit-cover\"\r\n                                                        />\r\n                                                    </figure>\r\n                                                )}\r\n\r\n                                                <h4 className=\"font-body p-3 mb-0\">\r\n                                                    {project.ProjectTitle}\r\n                                                </h4>\r\n                                            </Link>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                        ) : (\r\n                            <>\r\n                                <SaasItemSkeleton />\r\n                                <SaasItemSkeleton />\r\n                                <SaasItemSkeleton />\r\n                                <SaasItemSkeleton />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12 text-center mt-5\">\r\n                            {saasButtonData.Title ? (\r\n                                <Link\r\n                                    className=\"btn btn-secondary\"\r\n                                    to={saasButtonData.URL}\r\n                                >\r\n                                    {saasButtonData.Title}\r\n                                </Link>\r\n                            ) : (\r\n                                <Skeleton className=\"btn btn-outline btn-skeleton btn-min-w w-auto\" />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SaasProjects;\r\n","'use client';\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["_jsx","_Fragment","children","className","_jsxs","Skeleton","_useState","useState","_useState2","_slicedToArray","saasHeaderData","setSaasHeaderData","_useState3","_useState4","saasButtonData","setSaasButtonData","_useState5","_useState6","saasProjectsData","setSaasProjectsData","navigate","useNavigate","useEffect","_getSaasHeaderData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","saasHeaderAPI","wrap","_context","prev","next","axios","get","concat","config","BACKEND_URL","sent","setTimeout","data","SaasProject","Header","Button","t0","console","error","stop","apply","arguments","_getSaasProjectsData","_callee2","saasProjectsAPI","_context2","getSaasHeaderData","getSaasProjectsData","postURLFunction","_ref","_callee3","posturl","type","apiResponse","_context3","postURL","PostURL","state","Description","_x","_x2","Title","parser","count","style","length","slice","map","project","index","Link","onClick","e","ProjectThumbnailVideo","url","width","height","autoPlay","transform","src","ProjectThumbnail","formats","medium","alt","alternativeText","loading","ProjectTitle","id","SaasItemSkeleton","to","URL","_excluded","SkeletonThemeContext","React","defaultEnableAnimation","_ref2","_a","_b","_c","_ref2$count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","_ref2$circle","circle","styleProp","originalPropsStyleOptions","_objectWithoutProperties","contextStyleOptions","propsStyleOptions","_objectSpread","_i","_Object$entries","Object","entries","_Object$entries$_i","key","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","_ref$enableAnimation","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}